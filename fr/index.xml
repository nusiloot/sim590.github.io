<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>Simon Désaulniers</title>
    <link>https://sim590.github.io/fr/</link>
    <description>Recent content on Simon Désaulniers</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr</language>
    <managingEditor>sim.desaulniers@gmail.com (Simon Désaulniers)</managingEditor>
    <webMaster>sim.desaulniers@gmail.com (Simon Désaulniers)</webMaster>
    <copyright>©2020 Simon Désaulniers, All Rights Reserved</copyright>
    <lastBuildDate>Sat, 29 Feb 2020 03:00:12 -0500</lastBuildDate>
    
        <atom:link href="https://sim590.github.io/fr/index.xml" rel="self" type="application/rss+xml" />
    
    
    
      
      
      
        
      
        
      
        
      
        
      
        
      
        
      
        
      
        
      
        
      
        
      

      
      <item>
        <title>fzf: comment optimiser son utilisation de la ligne de commande</title>
        <link>https://sim590.github.io/fr/outils/fzf/</link>
        <pubDate>Sat, 11 Apr 2020 00:42:27 -0400</pubDate>
        <author>sim.desaulniers@gmail.com (Simon Désaulniers)</author>
        <atom:modified>Sat, 11 Apr 2020 00:42:27 -0400</atom:modified>
        <guid>https://sim590.github.io/fr/outils/fzf/</guid>
        <description>fzf est un programme filtrant le flux de son entrée standard par mots clefs fournis par l&amp;rsquo;utilisateur de manière interactive. Le filtre est du type fuzzy (d&amp;rsquo;où le nom fzf pour fuzzy finder), c&amp;rsquo;est-à-dire que les termes fournis au programme sont décomposés en sous-mots afin de permettre des recherches approximatives par l&amp;rsquo;utilisateur. Par exemple, prenons l&amp;rsquo;entrée suivante:
1 2 3  toto titi tutu   Si l&amp;rsquo;utilisateur fournissait le terme tt, toutes les lignes seraient sélectionnées, puisque les sous-mots t et t se trouvent tous deux dans toutes les lignes.</description>
        
        <dc:creator>Simon Désaulniers</dc:creator>
        
        
        <media:content url="https://sim590.github.ioimages/fzf/fzf-logo.png" medium="image"><media:title type="html">meta image</media:title></media:content>
        
          
            
              <category>GNU/Linux</category>
            
          
            
              <category>Productivité</category>
            
          
            
              <category>Vim</category>
            
          
            
              <category>zsh</category>
            
          
            
              <category>ranger</category>
            
          
            
              <category>pass</category>
            
          
        
        
          
            
              <category>Techno</category>
            
          
            
              <category>Outil</category>
            
          
        
        
      </item>
      
      <item>
        <title>Vim peut tout faire</title>
        <link>https://sim590.github.io/fr/vim/vim-peut-tout-faire/</link>
        <pubDate>Sun, 22 Mar 2020 11:11:56 -0400</pubDate>
        <author>sim.desaulniers@gmail.com (Simon Désaulniers)</author>
        <atom:modified>Sun, 22 Mar 2020 11:11:56 -0400</atom:modified>
        <guid>https://sim590.github.io/fr/vim/vim-peut-tout-faire/</guid>
        <description>Vim est un éditeur de texte et clairement le meilleur qui soit. Je ne dis pas ça sans peser mes mots. Ceci dit, il ne faut pas lui prêter une identité qu&amp;rsquo;il n&amp;rsquo;a pas. Vim n&amp;rsquo;est pas un environnement de développement intégré (EDI ou IDE en anglais) complet. Cependant, plusieurs aspects à son utilisation font sa grande force pour fournir un EDI complet à son usager:
 un langage de touches permettant aux doigts de faire tout le travail d&#39;édition de texte (couper, effacer, coller, réordonner, formater, etc.</description>
        
        <dc:creator>Simon Désaulniers</dc:creator>
        
        
        <media:content url="https://sim590.github.ioimages/vim/vim-peut-tout-faire/vim-all-the-things.png" medium="image"><media:title type="html">meta image</media:title></media:content>
        
          
            
              <category>Vim</category>
            
          
            
              <category>hjkl</category>
            
          
            
              <category>greffon</category>
            
          
        
        
          
            
              <category>Techno</category>
            
          
            
              <category>Outil</category>
            
          
            
              <category>Éditeur de texte</category>
            
          
            
              <category>Programmation</category>
            
          
        
        
      </item>
      
      <item>
        <title>Comment bien assurer la vie privée du clavardage?</title>
        <link>https://sim590.github.io/fr/cybers%C3%A9curit%C3%A9/comment-bien-assurer-la-confidentialit%C3%A9-du-clavardage/</link>
        <pubDate>Mon, 09 Mar 2020 00:00:00 -0400</pubDate>
        <author>sim.desaulniers@gmail.com (Simon Désaulniers)</author>
        <atom:modified>Mon, 09 Mar 2020 00:00:00 -0400</atom:modified>
        <guid>https://sim590.github.io/fr/cybers%C3%A9curit%C3%A9/comment-bien-assurer-la-confidentialit%C3%A9-du-clavardage/</guid>
        <description>Lorsqu&amp;rsquo;on utilise les différents outils de communications habituels de nos jours, il est commun de supposer la garantie de sa vie privée. L&amp;rsquo;utilisateur moyen ne se pose aucune question lorsqu&amp;rsquo;il se connecte à des services comme Facebook, Twitter ou Skype. Ou encore, on se rassure tout de suite à l&amp;rsquo;idée de voir des symboles de &amp;ldquo;sécurité&amp;rdquo; comme le suivant.
Tous les services susmentionnés sont effectivement munis de protections, mais contre et pour qui?</description>
        
        <dc:creator>Simon Désaulniers</dc:creator>
        
        
        <media:content url="https://sim590.github.ioimages/chiffrement-de-bout-en-bout.png" medium="image"><media:title type="html">meta image</media:title></media:content>
        
          
            
              <category>Chiffrement</category>
            
          
            
              <category>Chiffrement de bout en bout</category>
            
          
            
              <category>Confidentialité</category>
            
          
            
              <category>Signal</category>
            
          
            
              <category>WhatsApp</category>
            
          
            
              <category>Protocole</category>
            
          
            
              <category>Protocole de communication</category>
            
          
            
              <category>Communication</category>
            
          
        
        
          
            
              <category>Cybersécurité</category>
            
          
            
              <category>Cryptographie</category>
            
          
            
              <category>Vie privée</category>
            
          
        
        
      </item>
      
      <item>
        <title>Haskell: programmation dynamique</title>
        <link>https://sim590.github.io/fr/haskell/programmation-dynamique/</link>
        <pubDate>Mon, 02 Mar 2020 04:06:13 -0500</pubDate>
        <author>sim.desaulniers@gmail.com (Simon Désaulniers)</author>
        <atom:modified>Mon, 02 Mar 2020 04:06:13 -0500</atom:modified>
        <guid>https://sim590.github.io/fr/haskell/programmation-dynamique/</guid>
        <description>L&amp;rsquo;approche de programmation dynamique est souvent associée au remplissage d&amp;rsquo;un tableau à deux dimensions et à l&#39;écriture explicite de ce procédé sous forme itérative. Dans un langage fonctionnel comme Haskell, on bénéficie de quelques avantages d&amp;rsquo;expressivité de haut niveau et de lisibilité qu&amp;rsquo;on ne retrouve pas autrement.
Dans cet article, je commence par explorer deux exemples triviaux de programmation dynamique. Ensuite, je passe sur un problème tout aussi accessible, mais dont l&amp;rsquo;achèvement optimal demandera l&amp;rsquo;utilisation d&amp;rsquo;une structure Data.</description>
        
        <dc:creator>Simon Désaulniers</dc:creator>
        
        
        <media:content url="https://sim590.github.ioimages/haskell.png" medium="image"><media:title type="html">meta image</media:title></media:content>
        
          
            
              <category>Séquence de Collatz</category>
            
          
            
              <category>Data.Array</category>
            
          
            
              <category>nombre triangulaire</category>
            
          
        
        
          
            
              <category>Algorithmique</category>
            
          
            
              <category>Haskell</category>
            
          
            
              <category>Mémoïsation</category>
            
          
            
              <category>Programmation</category>
            
          
            
              <category>Programmation dynamique</category>
            
          
        
        
      </item>
      
      <item>
        <title>Adieu</title>
        <link>https://sim590.github.io/fr/adieu/</link>
        <pubDate>Sun, 19 Jun 2016 21:30:22 -0400</pubDate>
        <author>sim.desaulniers@gmail.com (Simon Désaulniers)</author>
        <atom:modified>Sun, 19 Jun 2016 21:30:22 -0400</atom:modified>
        <guid>https://sim590.github.io/fr/adieu/</guid>
        <description>GSOC Comme j&amp;rsquo;ai mentionné dans au article antérieur, je participe au programme Google Summer Of Code grâce à l&amp;rsquo;organisation Debian qui supervise mes travaux contribuant au logiciel libre Ring.
Deux jours restants Il reste deux jours avant mon départ pour le Cape, en Afrique du sud. C&amp;rsquo;est pour assister à l&#39;événement debconf (« Debian conference »), organisé par Debian, que je me rends là. Cet événement est organisé à chaque année et, l&amp;rsquo;année prochaine, c&amp;rsquo;est à Montréal que ça aura lieu !</description>
        
        <dc:creator>Simon Désaulniers</dc:creator>
        
        
        
        
        
        
      </item>
      

    
  </channel>
</rss>